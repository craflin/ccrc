
buildDir = "Build/$(configuration)/$(target)"
name = "ccrc"

targets = {
  
  Example = cppApplication + {
    dependencies = { "libnstd", "ccrc", "libccrc" }
    includePaths = {
      "Ext/libnstd/include"
      "Src/libccrc/include"
    }
    libPaths = {
      "$(dir $(buildDir))/libnstd"
      "$(dir $(buildDir))/libccrc"
    }
    libs = { "nstd", "ccrc" }
    root = "Example"
    objectFiles = "Example/Objects.h"
    files = {
      "Example/*.cpp" = cppSource
      "Example/*.h"
      "$(addprefix $(buildDir)/ccrc_,$(addsuffix .cpp,$(basename $(notdir $(objectFiles)))))" = cppSource + {
        folder = ".ccrc"
      }
      "$(objectFiles)" = {
        output = "$(buildDir)/ccrc_$(basename $(notdir $(file))).cpp"
        command = "$(dir $(outputDir))/ccrc/ccrc $(file) $(basename $(file)).cpp -o $(output) $(addprefix -I,$(includePaths))"
        dependencies = "ccrc"
      }
    }
    if tool == "vcxproj" {
      linkFlags += { "/SUBSYSTEM:CONSOLE" }
    }
    if platform == "Linux" {
      libs += { "pthread", "rt" }
    }
  }

  ccrc = cppApplication + {
    dependencies = { "libnstd" }
    includePaths = {
      "Ext/libnstd/include"
      "Ext/libclang/include"
    }
    libPaths = {
      "$(dir $(buildDir))/libnstd"
      "Ext/libclang/lib"
    }
    libs = { "nstd", "libclang" }
    root = "Src"
    files = {
      "Src/*.cpp" = cppSource
      "Src/*.h"
      "Ext/libclang/bin/libclang.dll" = {
        output = "$(outputDir)/$(notdir $(file))"
        command = "copy $(subst /,\\,$(file)) $(subst /,\\,$(output))"
      }
    }
    if tool == "vcxproj" {
      linkFlags += { "/SUBSYSTEM:CONSOLE" }
    }
    if platform == "Linux" {
      libs += { "pthread", "rt" }
    }
  }

  libccrc = cppStaticLibrary + {
    dependencies = { "libnstd" }
    includePaths = {
      "Ext/libnstd/include"
      "Src/libccrc/include"
    }
    root = { "Src/libccrc", "Src/libccrc/include" }
    files = {
      "Src/libccrc/*.cpp" = cppSource
      "Src/libccrc/include/*.h"
    }
  }

  include "Ext/libnstd/libnstd.mare"
  libnstd += {
    folder = "Ext"
  }
}
